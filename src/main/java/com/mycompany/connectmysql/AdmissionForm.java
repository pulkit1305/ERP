/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.connectmysql;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
//import javax.swing.JTextPane;

/**
 *
 * @author PULKIT SHARMA
 */
public final class AdmissionForm extends javax.swing.JFrame {

    public Connection con;
    public String s1;
    public Statement stmt;

    /**
     * Creates new form AdmissionForm
     */
    public AdmissionForm() {
        initComponents();
        loadCoursesIntoComboBox();

    }

    public void connectToDatabase() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pulkit?zeroDateTimeBehavior=CONVERT_TO_NULL", "springstudent", "springstudent");
            if (con != null) {
                stmt = con.createStatement(); // Initialize the Statement object
//            JOptionPane.showMessageDialog(null, "Server is connected", "Connection MSG", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void loadCoursesIntoComboBox() {
        connectToDatabase(); // Ensures connection and Statement are set up
        try {
            ResultSet rs = stmt.executeQuery("SELECT id, name, fees FROM courses");
            while (rs.next()) {
                cmbCourses.addItem(rs.getInt("id") + "-" + rs.getString("name"));
            }
            rs.close(); // Close ResultSet after processing
        } catch (SQLException ex) {
            Logger.getLogger(AdmissionForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtFees = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmbCourses = new javax.swing.JComboBox<>();
        chkFeesPaid = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 204));
        setForeground(new java.awt.Color(204, 255, 204));

        jLabel1.setText("Admission Form");

        jLabel2.setText("Name:");

        jLabel3.setText("Age:");

        jLabel4.setText("Contact:");

        jLabel5.setText("Email:");

        jLabel6.setText("Select Course:");

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Fees:");

        jLabel8.setText("Fees Paid:");

        cmbCourses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        cmbCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCoursesActionPerformed(evt);
            }
        });

        outputArea.setColumns(20);
        outputArea.setRows(5);
        jScrollPane2.setViewportView(outputArea);

        jButton2.setText("‚Üê");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(176, 176, 176))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFees, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkFeesPaid)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jButton1)
                .addContainerGap(226, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(chkFeesPaid))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtFees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        int age = Integer.parseInt(txtAge.getText());
        String contact = txtContact.getText();
        String email = txtEmail.getText();
        String selectedCourse = (String) cmbCourses.getSelectedItem();
        boolean feesPaid = chkFeesPaid.isSelected();
        int courseId = Integer.parseInt(selectedCourse.split("-")[0]);

        saveAdmission(name, age, contact, email, courseId, feesPaid);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void saveAdmission(String name, int age, String contact, String email, int courseId, boolean feesPaid) {
        connectToDatabase();
        try {

            String userQuery = "INSERT INTO users (name, age, contact, email) VALUES (?, ?, ?, ?)";
            PreparedStatement userPst = con.prepareStatement(userQuery, Statement.RETURN_GENERATED_KEYS);
            userPst.setString(1, name);
            userPst.setInt(2, age);
            userPst.setString(3, contact);
            userPst.setString(4, email);
            userPst.executeUpdate();
            ResultSet rs = userPst.getGeneratedKeys();
            if (rs.next()) {
                int userId = rs.getInt(1);

                String admissionQuery = "INSERT INTO admissions (user_id, course_id, date_of_admission, fees_paid) VALUES (?, ?, ?, ?)";
                PreparedStatement admissionPst = con.prepareStatement(admissionQuery);
                admissionPst.setInt(1, userId);
                admissionPst.setInt(2, courseId);
                admissionPst.setDate(3, Date.valueOf(LocalDate.now()));
                admissionPst.setBoolean(4, feesPaid);
                admissionPst.executeUpdate();
                System.out.println("amission saved");
                JOptionPane.showMessageDialog(null, "Admission successfully saved!");
                PreparedStatement pst = con.prepareStatement(
                        "SELECT u.name, u.email, a.date_of_admission,c.fees, a.fees_paid, c.name as cname FROM users u JOIN admissions a ON u.user_id = a.user_id JOIN courses c ON a.course_id = c.id WHERE u.user_id= ?"
                );
                pst.setInt(1, userId);
                rs = pst.executeQuery();

                if (rs.next()) {

                    JTextPane jtp = new JTextPane();
                    jtp.setContentType("text/html");
                    String htmlContent = "<html>"
                    + "<head>"
                    + "<style>"
                    + "body { font-family: Arial, sans-serif; background-color: #f9f9f9; margin: 0; padding: 0; }"
                    + ".slip {"
                    + "  width: 350px;"
                    + "  margin: 20px auto;"
                    + "  padding: 20px;"
                    + "  background: #fff;"
                    + "  border: 1px solid #ddd;"
                    + "  border-radius: 8px;"
                    + "  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);"
                    + "}"
                    + ".slip h1 {"
                    + "  font-size: 20px;"
                    + "  color: #333;"
                    + "  text-align: center;"
                    + "  margin-bottom: 10px;"
                    + "  border-bottom: 2px solid #f2f2f2;"
                    + "  padding-bottom: 10px;"
                    + "}"
                    + ".slip p {"
                    + "  font-size: 14px;"
                    + "  color: #555;"
                    + "  margin: 8px 0;"
                    + "}"
                    + ".slip p b {"
                    + "  color: #000;"
                    + "}"
                    + "</style>"
                    + "</head>"
                    + "<body>"
                    + "<div class='slip'>"
                    + "<h1>Admission Successful!</h1>"
                    + "<p><b>Name:</b> " + rs.getString("name") + "</p>"
                    + "<p><b>Email:</b> " + rs.getString("email") + "</p>"
                    + "<p><b>Date of Admission:</b> " + rs.getDate("date_of_admission") + "</p>"
                    + "<p><b>Course Name:</b> " + rs.getString("cname") + "</p>"
                    + "<p><b>Fees:</b> " + rs.getInt("fees") + "</p>"
                    + "<p><b>Fees Paid:</b> " + (rs.getBoolean("fees_paid") ? "Yes" : "No") + "</p>"
                    + "</div>"
                    + "</body>"
                    + "</html>";
//                    String htmlContent = "<html><body>"
//                            + "<h1>Admission Successful!</h1>"
//                            + "<p><b>Name:</b> " + rs.getString("name") + "</p>"
//                            + "<p><b>Email:</b> " + rs.getString("email") + "</p>"
//                            + "<p><b>Date of Admission:</b> " + rs.getDate("date_of_admission") + "</p>"
//                            + "<p><b>Course Name:</b> " + rs.getString("cname") + "</p>"
//                             + "<p><b>Fees:</b> " + rs.getInt("fees") + "</p>"
//                            + "<p><b>Fees Paid:</b> " + (rs.getBoolean("fees_paid") ? "Yes" : "No") + "</p>"
//                            + "</body></html>";

                    jtp.setText(htmlContent);

                    try {
                        jtp.print();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    String displayText = "Admission Successful!\n\n"
                            + "Name: " + rs.getString("name") + "\n"
                            + "Email: " + rs.getString("email") + "\n"
                            + "Date Of Admission: " + rs.getDate("date_of_admission") + "\n"
                            + "Course Name: " + rs.getString("cname") + "\n"
                               + "Fees: " + rs.getInt("fees") + "\n"
                            + "Fees Paid: " + (rs.getBoolean("fees_paid") ? "Yes" : "No");

                    outputArea.setText(displayText);
                } else {
                    outputArea.setText("No admission details found for User ID: " + userId);
                }

//            String displayText = "Admission Successful!\n\n" +
//                        "name:"+name+"\n"+
//                          "email:"+email+"\n"+
//                        "User ID: " + userId + "\n" +
//                        "Course ID: " + courseId + "\n" +
//                        "Date: " + LocalDate.now() + "\n" +
//                        "Fees Paid: " + (feesPaid ? "Yes" : "No");
//
//                outputArea.setText(displayText);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }


    private void cmbCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCoursesActionPerformed
        // TODO add your handling code here:\
        try {
            int courseId = Integer.parseInt(((String) cmbCourses.getSelectedItem()).split("-")[0]);
            PreparedStatement pst = con.prepareStatement("SELECT fees FROM courses WHERE id = ?");
            pst.setInt(1, courseId);
            ResultSet rsFees = pst.executeQuery();
            if (rsFees.next()) {
                txtFees.setText(String.valueOf(rsFees.getDouble("fees")));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_cmbCoursesActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        AdminDashboard window2 = new AdminDashboard();
        window2.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdmissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdmissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdmissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdmissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdmissionForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkFeesPaid;
    private javax.swing.JComboBox<String> cmbCourses;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFees;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
